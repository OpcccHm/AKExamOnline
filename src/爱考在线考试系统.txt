1，登录
2，题库管理
3，试卷管理：
	试卷列表：
		1,数据表：
			试卷表：
				字段：
					主键编号、类别、课程主键（外键关系）、标题、考试时长、试卷状态
					总分数、总题数，每题分数
				关系：
					试卷表-（n-1）-科目表
					试卷表-（m-n）-班级表
			试卷班级关系表：
				字段：	
					主键编号、试卷编号、班级编号、开考时间、结束时间（除了外键关系之外还有其他字段）
					1 			1    16GR1
					2           1    16GR2
					3	        2    16GR1
				关系：（因为m-n关系表中有其他字段，拆分为两个n-1关系）
					试卷表-(1-N)-关系表
					班级表-（1-N）-关系表
		2,JavaBean的封装、映射文件配置，关系配置
		3,jsp页面
		4,action\service\dao\config--OK
	随机组卷：
		1,打开子窗口，根据专业方向和阶段选择科目（Ajax）
		2,根据科目获取每类试题的总数
		3,填写基本信息，验证表单数据，计算总题数和每题的分数，然后提交表单数据
		4,查询所有的类型的试题
		5,随机获取试题集合
		6,设置试题和试卷的关系
		7,设置课程和试卷的关系
		8,添加试卷
		
	结束考试：当试卷状态为考试中的时候
		修改试卷状态
	开始考试：
		业务：
			1，先请求班级列表数据，传入参数试卷信息，请求转发到开始考试的页面
			2，填写数据，提交数据集合
			3，把数据集合添加到数据库list<PaperClass> listClass
				ts
				for(PaperClass pc : listClass){
					session.save(pc);
				}
				ts.commit();
		Struts2提交集合数据：
			在action中需要声明一个集合对象（paperClasses），并添加set、get
			在表单中使用索引来设置表单元素的name属性：
				paperClasses[0].pid、paperClasses[0].ccode、paperClasses[0].examDate、paperClasses[0].endDate
				paperClasses[1].pid、paperClasses[1].ccode、paperClasses[1].examDate、paperClasses[1].endDate
		DatePicker的使用:
			下载库文件，引入到页面
		
	选题组卷：
		前台页面：
			1，根据方向、阶段使用ajax请求更新科目列表（course.csid）
			2，根据选中的科目使用ajax请求更新题目数据列表
			3，填写基本信息(paper.pName,pTotalScore,pTime,qTotal,qScore,pType="笔试",pSate="未开考")
			4，选题（存到session{question}）、更新已选题目数量、计算每题的分数
			5,提交数据
		后台业务：
			1，接收前台页面提交的数据
				course.csid
				paper
				paper.setCourse();//设置试卷科目的关系
				session.getAttribute("questions");//通过session对象获取已选题目数据集合
				paper.setWrittenQuestions();//设置关系
				使用hibernate把数据写入到数据库
				
				session.setAttribute("questions",null);//清空
4，成绩管理：
	试卷列表：
		前台：
			参考试卷管理、题库管理去完成
		后台：
			根据条件查询试卷列表
			科目、试卷类型（笔试）、试卷状态（考试结束）
			hql.append("select paper from Paper paper where paper.pState = '考试结束'");
			//拼接HQL
			if(parameter.get("csId") != null && (Integer)parameter.get("csId") > 0){
				hql.append(" and paper.csId = :csId");
			}
			if(parameter.get("pType") != null && !"".equals(parameter.get("pType"))){
				hql.append(" and paper.ptype = :pType");
			}
			PaperDaoImpl：getPaperList
	查看试题：
		前台：参考题库管理的试题列表页面
			分页显示当前试卷的试题
		后台：
			根据试卷Id查询试卷对象paper
			通过试卷对象获取当前试卷的所有题目：
				paper.getWrittenQuestions();
	查看成绩：
		前台：
			1,打开成绩列表子窗口
			2,根据试卷编号查询相关信息（试卷信息、试卷班级关系表数据、班级信息）
			3,根据试卷编号、班级、查询所有学生的成绩信息
			4,根据条件查询成绩信息
			5,统计计算总人数、成绩大于60的人数（循环判断）、及格率（根据总人数、及格人数计算）
		后台：
			1，根据试卷编号查询相关信息（试卷信息、试卷班级关系表数据、班级信息）
	成绩列表-查看详情：
		前台：
			1，根据学号，查询学生信息
			2，根据试卷编号查询试卷的相关信息（试卷信息、试卷、试卷班级关系表信息、试题信息）
			3，根据学号、试卷信息、试题信息可以查询答题表的数据
			4，对每一个答题进行判断，是否答对
		后台：
5，在线考试：
	试卷列表（可以参加考试的试卷列表）：
		1，根据学号获取班级信息
		2，根据班级信息、当前时间从班级试卷关系中获取试卷编号
		3，根据试卷获取试卷信息
	
	在线考试：
		根据学号、班级、试卷信息获取基本数据
		提交表单数据，计算成绩、保存成绩信息
		难点：
			倒计时：js、自动提示、自动提交表单数据
			保存答题信息（当前剩余时间）到session：通过JS异步请求来做




